# -*- coding: utf-8 -*-
"""reto07.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tt-OvGytiTk5WP5CrxXCbaqyfnr5_PA2

1.Imprimir un listado con los números del 1 al 100 cada uno con su respectivo cuadrado.
"""

for x in range(1,101):
  print(x,x**2)

"""2.Imprimir un listado con los números impares desde 1 hasta 999 y seguidamente otro listado con los números pares desde 2 hasta 1000."""

for x in range(1,1000,2):
  print(x)
for y in range(2,1001,2):
  print(y)

"""3.Imprimir los números pares en forma descendente hasta 2 que son menores o iguales a un número natural n ≥ 2 dado"""

x=int(input("ingrese un numero natural"))
for i in range (x,1,-1):
   if i%2==0:
    print(i)
   else:
      x = x - 1

"""4.Imprimir los números de 1 hasta un número natural n dado, cada uno con su respectivo factorial"""

x=int(input("ingrese su numero"))
i : int
i = 1

for k in range (1,x+1):
  i = k * i
  print(k,i)

"""5.Calcular el valor de 2 elevado a la potencia n usando ciclos for"""

n=int(input("ingrese el numero al que quiere elevar 2:"))
i=1
for k in range(1,n+1):
  i=i*2
print(i)

"""6.Leer un número natural n, leer otro dato de tipo real x y calcular x^n usando ciclos for. Disclaimer: Trate de no utilizar el operador de potencia (**)."""

x=float(input("ingrese un numero real:"))
n=int(input("ingrese un numero entero:"))

i=1
for k in range(1,n+1):
  i=i*x
print(i)

"""7.Diseñe un programa que muestre las tablas de multiplicar del 1 al 9."""

for x in range (1,10,1):
 for y in range (1, 11, 1):
   print (str(x) + " X " + str(y) + " = " + str(x*y))

"""8.Diseñar una función que permita calcular una aproximación de la función exponencial alrededor de 0 para cualquier valor x (real), utilizando los primeros n términos de la serie de Taylor. Nota: use math para traer la función exponencial y mostrar la diferencia entre el valor real y la aproximación"""

import math

def calcular_exponencial(x, n):
    resultado = 0
    i = 0
    while i <= n:
        parte = (x ** i) / math.factorial(i)
        resultado = resultado + parte
        i = i + 1

    verdadero = math.exp(x)
    diferencia = (verdadero - resultado)

    print("Aproximación de e^" + str(x) + " con " + str(n) + " términos: " + str(resultado))
    print("Valor real con math.exp: " + str(verdadero))
    print("Diferencia: " + str(diferencia))

x = float(input("Escribe un número para x: "))
n = int(input("¿Cuántos términos quieres usar?: "))

calcular_exponencial(x, n)

"""9.Diseñar una función que permita calcular una aproximación de la función seno alrededor de 0 para cualquier valor x (real), utilizando los primeros n términos de la serie de Maclaurin. Nota: use math para traer la función seno y mostrar la diferencia entre el valor real y la aproximación."""

import math

def calcular_seno(x, n):
    resultado = 0
    i = 0
    while i <= n:
        signo = (-1) ** i
        potencia = x ** (2 * i + 1)
        factorial = math.factorial(2 * i + 1)
        termino = signo * (potencia / factorial)
        resultado = resultado + termino
        i = i + 1

    valor_real = math.sin(x)
    diferencia = abs(valor_real - resultado)

    print("Aproximación de sin(" + str(x) + ") con " + str(n) + " términos: " + str(resultado))
    print("Valor real con math.sin: " + str(valor_real))
    print("Diferencia: " + str(diferencia))

x = float(input("Escribe un número para x (en radianes): "))
n = int(input("¿Cuántos términos quieres usar?: "))

calcular_seno(x, n)